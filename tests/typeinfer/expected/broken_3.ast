Program : <none> {
  fns: [
    0: FnDef : <none> {
      name: <foo@1> : fn(i32, i32) -> ()
      params: [
        0: FnParam : i32 {
          name: <x@2> : <error>
          type: i32
        }
        1: FnParam : i32 {
          name: <y@2> : i32
          type: i32
        }
      ]
      return: ()
      given: []
      body: [
        0: ExprStmt : () {
          pass: CallExpr : () {
            fn: VarExpr : fn(i32, i32) -> () {
              var: <bar@1> : fn(i32, i32) -> ()
            }
            args: [
              0: TypeConvertExpr : i32 {
                expr: IntLiteralExpr(1) : <intlit>
              }
            ]
          }
        }
        1: LetStmt : <none> {
          var: VarDef <x@2> : <error>
          mutable: false
          init: <ERROR>
        }
      ]
    }
    1: FnDef : <none> {
      name: <bar@1> : fn(i32, i32) -> ()
      params: [
        0: FnParam : i32 {
          name: <a@3> : i32
          type: i32
        }
        1: FnParam : i32 {
          name: <b@3> : i32
          type: i32
        }
      ]
      return: ()
      given: []
      body: []
    }
  ]
}

------ ERRORS ------
Type error at (2:5): expected 2 arguments, got 1
